// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
	font-size: ($sizeValue * 16) * 1px;
	font-size: $sizeValue * 1rem;
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clearfix
@mixin clearfix() {
	content: "";
	display: table;
	table-layout: fixed;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}

@mixin shadow-hover-extruded( $color__shadow: $color__text-highlight ) {
	transform: translate(-10px, 10px) !important;
	box-shadow: 1px -1px 0 $color__shadow,
		2px -2px 0 $color__shadow,
		3px -3px 0 $color__shadow,
		4px -4px 0 $color__shadow,
		5px -5px 0 $color__shadow,
		6px -6px 0 $color__shadow,
		7px -7px 0 $color__shadow,
		8px -8px 0 $color__shadow,
		9px -9px 0 $color__shadow,
		10px -10px 0 $color__shadow;
}

// 3D Hover effect
@mixin shadow-hover( $color__shadow: $color__text-highlight ) {
	transform: translate(0, 0);
	box-shadow: 0 0 0 $color__shadow,
		0 0 0 $color__shadow,
		0 0 0 $color__shadow,
		0 0 0 $color__shadow,
		0 0 0 $color__shadow,
		0 0 0 $color__shadow,
		0 0 0 $color__shadow,
		0 0 0 $color__shadow,
		0 0 0 $color__shadow,
		0 0 0 $color__shadow;

	&:hover {
		@include shadow-hover-extruded( $color__shadow );

		// This is to stop strobing when hovering on the shadows
		&:before,
		&:after {
			content: '';
			position: absolute;
			background-color: transparent;
		}

		&:before {
			bottom: 100%;
			left: 0;
			right: 0;
			height: 10px;
		}

		&:after {
			top: -10px;
			bottom: 0;
			left: 100%;
			width: 10px;
		}
	}
}

/// Mixin printing a linear-gradient
@mixin linear-gradient($direction, $color-stops...) {
  @if is-direction($direction) == false {
    $color-stops: ($direction, $color-stops);
    $direction: 180deg;
  }

  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
  background: linear-gradient($direction, $color-stops);
}
